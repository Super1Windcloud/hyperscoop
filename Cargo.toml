[package]
name = "hp"
version.workspace = true
edition.workspace = true
publish = { workspace = true }
authors = { workspace = true }
description = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
readme = { workspace = true }
homepage = { workspace = true }
rust-version = { workspace = true }
keywords = { workspace = true }
categories = { workspace = true }

[features]
default = []  # 默认所有feature禁用

[dependencies]
# 当依赖被标记为 "可选 optional" 时，意味着它默认不会被编译
serde = { version = "1.0.213" }
log = { workspace = true }
clap = { version = "4.5.20", features = ["derive", "cargo", "color"] }
crossterm = { workspace = true }
clap-verbosity-flag = { workspace = true }
anyhow = { workspace = true }
env_logger = "0.11.5"
serde_json = { workspace = true }
command_util_lib = { path = "crates/command" }
regex = "1.11.1"
rayon = "1.10.0"
color-eyre = "0.6.3"
reqwest = { workspace = true }
tokio = { workspace = true }
url = { workspace = true }
sha2 = { workspace = true }
rand = { workspace = true }
sha1 = { workspace = true }
line-ending = { workspace = true }
magic-crypt = "4.0.1"
console = "0.15.11"
comfy-table = { workspace = true }
indicatif = { workspace = true }
windows = { version = "0.56.0", features = ["Win32_Foundation",
  "Win32_System_Services", "Win32_System_SystemServices", "Win32_System_Registry",
  "Win32_Security", "Win32_Storage_FileSystem", "Win32_System_SecurityCenter"] }
winreg = "0.55.0"
thiserror = "1.0.66"
which = { workspace = true }
qrcode = "0.14.1"
hex = {workspace = true }



[workspace.dependencies]
human-panic = "2.0.2"
reqwest = "0.12.9"
indicatif = "0.17.11"
serde = { version = "1.0.213", features = ["derive"] }
log = "0.4.22"
clap = { version = "4.5.20", features = ["derive"] }
crossterm = "0.28.1"
clap-verbosity-flag = "2.2.2"
anyhow = "1.0.91"
serde_json = "1.0.132"
tokio = { version = "1.44.2", features = ["full", "macros"] }
dashmap = "6.1.0"
quote = "1.0.37"
syn = "2.0.91"
color-eyre = "0.6.3"
bat = { version = "0.25.0", features = ["regex-onig", "regex-fancy"], default-features = false }
git2 = "0.20.1"
flate2 = "1.1.1"
url = "2.5.4"
sha2 = { version = "0.10.8" }
rand = "0.8.5"
sha1 = "0.10.6"
line-ending = "1.5.1"
comfy-table = "7.1.4"
which = "7.0.3"
hex = "0.4.3"


[[bin]]
name = "hp"
path = "src/main.rs"


[workspace]
members = ["crates/command", ".", "crates/hscoop_macro", "crates/shim", "crates/hash"]  # 显式把src根目录也一并添加到工作区
resolver = "2"



[workspace.package]
version = "4.0.8"
edition = "2021"
publish = false  #
authors = ["superwindcloud<<1178933440@qq.com>"]
description = "一个更快更强更精美的Windows包管理器 "
license = "MIT OR Apache-2.0"
repository = "https://gitee.com/superwindcloud/hyperscoop"
readme = "README.md"
homepage = "https://gitee.com/superwindcloud"
rust-version = "1.82.0"
categories = ["command-line-utilities", "development-tools", "command-line-interface"]
keywords = ["scoop", "windows", "package-manager", "rust", "powerful-tool"]
exclude = ["target", "hyperscoop_source_bucket", "script", "node_modules"]
include = ["src/**/*", "Cargo.toml", "build.rs", "Cargo.lock"]
[workspace.lints.rust]
unsafe_code = "warn"
unreachable_pub = "warn"



[dev-dependencies] # 依赖项仅在开发和测试过程中使用，
# 例如 `cargo test` 或 `cargo bench` , 'cargo build --tests` ,`cargo build --examples` |
criterion = { version = "0.5.1" }

[profile.release]
debug = false
lto = true
panic = "abort"
opt-level = 3
strip = "symbols"
codegen-units = 1    # 编译单元数量
incremental = true
debug-assertions = false
overflow-checks = false
rpath = false   # 关闭运行时路径

[profile.dev]
opt-level = 0
debug = false
lto = false
overflow-checks = true
panic = "abort"
incremental = true
codegen-units = 256
debug-assertions = true
rpath = false



[target.x86_64-pc-windows-msvc.dependencies] # 依赖项仅在 Windows 平台上使用。
criterion = "0.5.1"

[target.macos.dependencies]
core-foundation = "0.10.0"

[target.windows.dependencies]
windows = "0.60.0"

[target.linux.dependencies]
nix = "0.29.0"


[package.metadata.release]
version-increment = "patch"  # 版本号递增方式为 patch
changelog-path = "CHANGELOG.md"  # 发布 Changelog 文件路径
tag-template = "v{version}"  # 发布 tag 名称模板
push = false   # 是否推送到远程仓库
check-readme = true  # 是否检查 README 文件
check-license = true  # 是否检查 LICENSE 文件
check-cargo-toml = true  # 是否检查 Cargo.toml 文件
check-manifest = true  # 是否检查 Cargo.toml 文件
check-all = true  # 是否检查所有文件


[package.metadata.release.github]
repository = "superwindcloud/hyperscoop"
username = "superwindcloud"
labels = ["release"]


[package.metadata.docs.rs]
features = ["default"]
default-target = "x86_64-pc-windows-msvc"


[lints.rust]
unexpected_cfgs = { level = "allow" }




[[bench]]
name = "hash"
path = "benches/hash_benchmark.rs"
harness = false # 必须设置为 false 才能使用 criterion 进行基准测试


